{
	"variables": [],
	"info": {
		"name": "Entando-Client-Onboarding Run",
		"_postman_id": "a262d021-2cf9-41ea-d280-45e75c531727",
		"description": "RESTful requests of the Entando Client Onboarding demo.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Get all process instances",
			"request": {
				"url": "http://{{kie-server-host}}/kie-server/services/rest/server/queries/processes/instances/",
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "Get all process instances on the KIE-Server."
			},
			"response": []
		},
		{
			"name": "Start new process",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var parentProcessId = responseBody;",
							"postman.setEnvironmentVariable(\"parent-process-id\", parentProcessId);"
						]
					}
				}
			],
			"request": {
				"url": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/processes/commercial-client-onboarding.ClientOnboardingProcess/instances/correlation/entando-1",
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"client\":{\n      \"com.redhat.bpms.demo.fsi.onboarding.model.Client\":{\n         \"id\":null,\n         \"name\":\"Matteo\",\n         \"country\":\"IT\",\n         \"type\":\"BIG_BUSINESS\",\n         \"bic\":\"123456789\",\n         \"relatedParties\":[\n            {\n               \"com.redhat.bpms.demo.fsi.onboarding.model.RelatedParty\":{\n                  \"id\":null,\n                  \"relationship\":\"Consultant\",\n                  \"party\":{\n                     \"com.redhat.bpms.demo.fsi.onboarding.model.Party\":{\n                        \"id\":null,\n                        \"name\":\"Duncan\",\n                        \"surname\":\"Doyle\",\n                        \"dateOfBirth\":1506590295001,\n                        \"ssn\":\"987654321\",\n                        \"email\": \"ddoyle@redhat.com\"\n                     }\n                  }\n               }\n            }\n         ]\n      }\n   },\n   \"accountManager\": \"prakash\"\n}"
				},
				"description": "Start process."
			},
			"response": []
		},
		{
			"name": "Signal process with account name",
			"request": {
				"url": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/processes/instances/{{parent-process-id}}/signal/account_registered",
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\"{{account-id}}\""
				},
				"description": "Signal account registered."
			},
			"response": []
		},
		{
			"name": "Get Enrichment Document human tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests['Status code is 200'] = responseCode.code === 200;",
							"//tests['Host should be set'] = jsonData.headers.Host === 'httpbin.org';",
							"//tests['URL should be set'] = jsonData.url === 'http://httpbin.org'",
							"",
							"//console.log(jsonData)",
							"",
							"console.log(\"Retrieving task ids from response\");",
							"var taskArray = jsonData['task-summary'];",
							"var uploadDocumentTaskList = [];",
							"for (var task of taskArray) {",
							"    var nextTaskId = task['task-id'];",
							"    //Enrichment Upload Document tasks.",
							"    if (task['task-name'] == \"Enrichment Upload Document\") {",
							"        console.log(\"Pushing task id to list: \" + nextTaskId);",
							"        uploadDocumentTaskList.push({id: nextTaskId});",
							"    }",
							"}",
							"",
							"//Enrichment Documents",
							"if (uploadDocumentTaskList.length) {",
							"    //Array is not empty. Pop the first id.",
							"    var nextTaskId = uploadDocumentTaskList.pop().id;",
							"    console.log(\"Next task id to process is: \" + nextTaskId);",
							"    postman.setEnvironmentVariable(\"next-task-id\", nextTaskId);",
							"    //And set the task list as environment variable.",
							"    console.log(\"Remaing task id array: \" + uploadDocumentTaskList);",
							"    postman.setEnvironmentVariable(\"upload-document-task-list\", JSON.stringify(uploadDocumentTaskList));    ",
							"    postman.setNextRequest('Start next Enrichment Document human task');",
							"} else {",
							"    //List of Enrichment Documents is empty, so we can jump to another task.",
							"    console.log(\"No Enrichment Document tasks found.\");",
							"    // If that's the case, we want to work on the 'Additional Client Details' task.",
							"    //TODO: Do something else. Currently we stop.",
							"    postman.setNextRequest('Get Additional Client Details human tasks');",
							"    ",
							"    ",
							"}",
							"",
							"console.log(uploadDocumentTaskList);",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/queries/tasks/instances/pot-owners?user={{account-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"queries",
						"tasks",
						"instances",
						"pot-owners"
					],
					"query": [
						{
							"key": "user",
							"value": "{{account-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Start next Enrichment Document human task",
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/tasks/{{next-task-id}}/states/started?user={{account-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"containers",
						"client-onboarding",
						"tasks",
						"{{next-task-id}}",
						"states",
						"started"
					],
					"query": [
						{
							"key": "user",
							"value": "{{account-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "Start task"
			},
			"response": []
		},
		{
			"name": "Complete Enrich Document Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"//Set the next task",
							"var uploadDocumentTaskList = JSON.parse(environment['upload-document-task-list']);",
							"",
							"console.log(\"Completed this task. Setting the next one from this list: \" + uploadDocumentTaskList);",
							"",
							"//Enrichment Documents",
							"if (uploadDocumentTaskList.length) {",
							"    //Array is not empty. Pop the first id.",
							"    var nextTaskId = uploadDocumentTaskList.pop().id;",
							"    console.log(\"Next task id to process is: \" + nextTaskId);",
							"    postman.setEnvironmentVariable(\"next-task-id\", nextTaskId);",
							"    //And set the task list as environment variable.",
							"    console.log(\"Remaing task id array: \" + uploadDocumentTaskList);",
							"    postman.setEnvironmentVariable(\"upload-document-task-list\", JSON.stringify(uploadDocumentTaskList));    ",
							"    postman.setNextRequest('Start next Enrichment Document human task');",
							"} else {",
							"    //List of Enrichment Documents is empty, so we can jump to another task.",
							"    console.log(\"No Enrichment Document tasks found.\");",
							"    // If that's the case, we want to work on the 'Additional Client Details' task.",
							"    //TODO: Do something else. Currently we stop.",
							"    console.log(\"Moving to admin tasks\");",
							"    postman.setNextRequest(\"Get Enrichment Document Approval human tasks\");",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/tasks/{{next-task-id}}/states/completed?user={{account-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"containers",
						"client-onboarding",
						"tasks",
						"{{next-task-id}}",
						"states",
						"completed"
					],
					"query": [
						{
							"key": "user",
							"value": "{{account-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"htUploadedDocument\" : {\n    \"org.jbpm.document.service.impl.DocumentImpl\":{\n      \"identifier\" : \"myCoolIdentifier\",\n      \"name\" : \"My Cool Document.\",\n      \"link\" : \"my-cool-link\",\n      \"size\" : 1200,\n      \"lastModified\" : 1507840764549,\n      \"content\" : \"VkdocGN5QnBjeUJoSUhOaGJYQnNaU0JwWkdWdWRHbG1hV05oZEdsdmJpQmtiMk4xYldWdWRDND0=\",\n      \"attributes\" : {\n        \"testKey\" : \"testValue\"\n      }\n    }\n  }\n}"
				},
				"description": "Complete task with document."
			},
			"response": []
		},
		{
			"name": "Get Enrichment Document Approval human tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests['Status code is 200'] = responseCode.code === 200;",
							"",
							"console.log(\"Retrieving task ids from response\");",
							"var taskArray = jsonData['task-summary'];",
							"var enrichmentDocumentManualApprovalTaskList = [];",
							"for (var task of taskArray) {",
							"    var nextTaskId = task['task-id'];",
							"    //Enrichment Upload Document tasks.",
							"    if (task['task-name'] == \"Enrichment Manual Approval\") {",
							"        console.log(\"Pushing task id to list: \" + nextTaskId);",
							"        enrichmentDocumentManualApprovalTaskList.push({id: nextTaskId});",
							"    }",
							"}",
							"",
							"//Enrichment Documents",
							"if (enrichmentDocumentManualApprovalTaskList.length) {",
							"    //Array is not empty. Pop the first id.",
							"    var nextTaskId = enrichmentDocumentManualApprovalTaskList.pop().id;",
							"    console.log(\"Next task id to process is: \" + nextTaskId);",
							"    postman.setEnvironmentVariable(\"next-task-id\", nextTaskId);",
							"    //And set the task list as environment variable.",
							"    console.log(\"Remaing task id array: \" + enrichmentDocumentManualApprovalTaskList);",
							"    postman.setEnvironmentVariable(\"enrichment-document-manual-approval-task-list\", JSON.stringify(enrichmentDocumentManualApprovalTaskList));    ",
							"    postman.setNextRequest('Start next Enrichment Document Approval human task');",
							"} else {",
							"    //List of Enrichment Documents is empty, so we can jump to another task.",
							"    console.log(\"No Enrichment Document tasks found.\");",
							"    // If that's the case, we want to work on the 'Additional Client Details' task.",
							"    postman.setNextRequest(\"Get Additional Client Details human tasks\");",
							"}",
							"console.log(enrichmentDocumentManualApprovalTaskList);",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/queries/tasks/instances/pot-owners?user={{admin-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"queries",
						"tasks",
						"instances",
						"pot-owners"
					],
					"query": [
						{
							"key": "user",
							"value": "{{admin-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Start next Enrichment Document Approval human task",
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/tasks/{{next-task-id}}/states/started?user={{admin-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"containers",
						"client-onboarding",
						"tasks",
						"{{next-task-id}}",
						"states",
						"started"
					],
					"query": [
						{
							"key": "user",
							"value": "{{admin-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "Start task"
			},
			"response": []
		},
		{
			"name": "Complete Enrichment Document Approval task",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Set the next task",
							"var enrichmentDocumentManualApprovalTaskList = JSON.parse(environment['enrichment-document-manual-approval-task-list']);",
							"",
							"console.log(\"Completed this task. Setting the next one from this list: \" + enrichmentDocumentManualApprovalTaskList);",
							"",
							"//Enrichment Documents",
							"if (enrichmentDocumentManualApprovalTaskList.length) {",
							"    //Array is not empty. Pop the first id.",
							"    var nextTaskId = enrichmentDocumentManualApprovalTaskList.pop().id;",
							"    console.log(\"Next task id to process is: \" + nextTaskId);",
							"    postman.setEnvironmentVariable(\"next-task-id\", nextTaskId);",
							"    //And set the task list as environment variable.",
							"    console.log(\"Remaing task id array: \" + enrichmentDocumentManualApprovalTaskList);",
							"    postman.setEnvironmentVariable(\"enrichment-document-manual-approval-task-list\", JSON.stringify(enrichmentDocumentManualApprovalTaskList));    ",
							"    postman.setNextRequest('Start next Enrichment Document Approval human task');",
							"} else {",
							"    //List of Enrichment Documents is empty, so we can jump to another task.",
							"    console.log(\"No Enrichment Document tasks found.\");",
							"    // If that's the case, we want to work on the 'Additional Client Details' task.",
							"    //TODO: Do something else. Currently we stop.",
							"    console.log(\"Stopping run!\");",
							"    postman.setNextRequest(\"Get Additional Client Details human tasks\");",
							"}",
							"console.log(enrichmentDocumentManualApprovalTaskList);"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/tasks/{{next-task-id}}/states/completed?user={{admin-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"containers",
						"client-onboarding",
						"tasks",
						"{{next-task-id}}",
						"states",
						"completed"
					],
					"query": [
						{
							"key": "user",
							"value": "{{admin-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"htApprovalStatus\" : \"Approved because of this and this.\",\n  \"htUploadedDocumentApproved\" : true\n}\n"
				},
				"description": "Complete Manual Approval Task."
			},
			"response": []
		},
		{
			"name": "Get Additional Client Details human tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests['Status code is 200'] = responseCode.code === 200;",
							"//tests['Host should be set'] = jsonData.headers.Host === 'httpbin.org';",
							"//tests['URL should be set'] = jsonData.url === 'http://httpbin.org'",
							"",
							"//console.log(jsonData)",
							"",
							"console.log(\"Retrieving task ids from response\");",
							"var taskArray = jsonData['task-summary'];",
							"var additionalClientDetailsTaskList = [];",
							"for (var task of taskArray) {",
							"    var nextTaskId = task['task-id'];",
							"    //Enrichment Upload Document tasks.",
							"    if (task['task-name'] == \"Additional Client Details\") {",
							"        console.log(\"Pushing task id to list: \" + nextTaskId);",
							"        additionalClientDetailsTaskList.push({id: nextTaskId});",
							"    }",
							"}",
							"",
							"//Additional Client Details",
							"if (additionalClientDetailsTaskList.length) {",
							"    //Array is not empty. Pop the first id.",
							"    var nextTaskId = additionalClientDetailsTaskList.pop().id;",
							"    console.log(\"Next task id to process is: \" + nextTaskId);",
							"    postman.setEnvironmentVariable(\"next-task-id\", nextTaskId);",
							"    //And set the task list as environment variable.",
							"    console.log(\"Remaing task id array: \" + additionalClientDetailsTaskList);",
							"    postman.setEnvironmentVariable(\"additional-client-details-task-list\", JSON.stringify(additionalClientDetailsTaskList));    ",
							"    postman.setNextRequest('Start next additional client details task');",
							"} else {",
							"    //List of Enrichment Documents is empty, so we can jump to another task.",
							"    console.log(\"No Enrichment Document tasks found.\");",
							"    // If that's the case, we want to work on the 'Additional Client Details' task.",
							"    //TODO: Do something else. Currently we stop.",
							"    postman.setNextRequest(null);",
							"}",
							"",
							"console.log(additionalClientDetailsTaskList);",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/queries/tasks/instances/pot-owners?user={{account-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"queries",
						"tasks",
						"instances",
						"pot-owners"
					],
					"query": [
						{
							"key": "user",
							"value": "{{account-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Start next additional client details task",
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/tasks/{{next-task-id}}/states/started?user={{account-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"containers",
						"client-onboarding",
						"tasks",
						"{{next-task-id}}",
						"states",
						"started"
					],
					"query": [
						{
							"key": "user",
							"value": "{{account-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "Start additional client details task"
			},
			"response": []
		},
		{
			"name": "Get next additional client details task with input and output data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests['Status code is 200'] = responseCode.code === 200;",
							"",
							"console.log(\"Retrieving task input and output data from response.\");",
							"",
							"var client = jsonData['task-input-data']['htClient']['com.redhat.bpms.demo.fsi.onboarding.model.Client'];",
							"client['phoneNumber'] = \"+31-6-12345678\";",
							"",
							"postman.setEnvironmentVariable(\"updated-client-details\", JSON.stringify(client));",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/tasks/{{next-task-id}}?user={{account-id}}&withInputData=true&withOutputData=true",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"containers",
						"client-onboarding",
						"tasks",
						"{{next-task-id}}"
					],
					"query": [
						{
							"key": "user",
							"value": "{{account-id}}",
							"equals": true,
							"description": ""
						},
						{
							"key": "withInputData",
							"value": "true",
							"equals": true,
							"description": ""
						},
						{
							"key": "withOutputData",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": "Get Task with input and output data."
			},
			"response": []
		},
		{
			"name": "Complete Additional Client Details Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//Set the next task",
							"var additionalClientDetailsTaskList = JSON.parse(environment['additional-client-details-task-list']);",
							"",
							"console.log(\"Completed this task. Setting the next one from this list: \" + additionalClientDetailsTaskList);",
							"",
							"//Enrichment Documents",
							"if (additionalClientDetailsTaskList.length) {",
							"    //Array is not empty. Pop the first id.",
							"    var nextTaskId = additionalClientDetailsTaskList.pop().id;",
							"    console.log(\"Next task id to process is: \" + nextTaskId);",
							"    postman.setEnvironmentVariable(\"next-task-id\", nextTaskId);",
							"    //And set the task list as environment variable.",
							"    console.log(\"Remaing task id array: \" + additionalClientDetailsTaskList);",
							"    postman.setEnvironmentVariable(\"additional-client-details-task-list\", JSON.stringify(additionalClientDetailsTaskList));    ",
							"    postman.setNextRequest('Start next task additional client details task');",
							"} else {",
							"    //List of Enrichment Documents is empty, so we can jump to another task.",
							"    console.log(\"No Additional Client Details tasks found.\");",
							"    ",
							"    //TODO: Do something else. Currently we stop.",
							"    //console.log(\"Moving to admin tasks\");",
							"    postman.setNextRequest(null);",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//Build the request",
							"var updatedClient = JSON.parse(environment['updated-client-details']);",
							"",
							"var updatedClientDetailsRequest = {};",
							"var updatedClientModel = {};",
							"updatedClientModel['com.redhat.bpms.demo.fsi.onboarding.model.Client'] = updatedClient;",
							"updatedClientDetailsRequest['htClient'] = updatedClientModel",
							"",
							"postman.setEnvironmentVariable(\"complete-additional-client-details-request-body\", JSON.stringify(updatedClientDetailsRequest));",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{kie-server-host}}/kie-server/services/rest/server/containers/client-onboarding/tasks/{{next-task-id}}/states/completed?user={{account-id}}",
					"protocol": "http",
					"host": [
						"{{kie-server-host}}"
					],
					"path": [
						"kie-server",
						"services",
						"rest",
						"server",
						"containers",
						"client-onboarding",
						"tasks",
						"{{next-task-id}}",
						"states",
						"completed"
					],
					"query": [
						{
							"key": "user",
							"value": "{{account-id}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "X-KIE-ContentType",
						"value": "JSON",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Basic a2llc2VydmVyOmtpZXNlcnZlcjEh",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{complete-additional-client-details-request-body}}"
				},
				"description": "Complete additional client details task."
			},
			"response": []
		}
	]
}